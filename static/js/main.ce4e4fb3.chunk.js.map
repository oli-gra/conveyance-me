{"version":3,"sources":["Header.js","Main.js","firebase.js","service.js","Chart.js","Side.js","Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","darkMode","setMode","onChange","event","target","checked","burgerMenuItems","label","CheckBox","toggle","background","pad","height","Anchor","margin","left","href","icon","Home","color","size","ResponsiveContext","Consumer","Box","justify","Menu","a11yTitle","dropProps","align","top","right","Apps","items","dropBackground","conveyancerDataColumns","property","header","Text","footer","primary","aggregate","BUYER_PANELS","body","table","fee","cost","link","url","list","SELLER_PANELS","Main","data","useState","setChecked","panelText","panel","gap","panelList","List","children","datum","direction","panelTable","DataTable","columns","resizeable","panelLink","vertical","Heading","bottom","Accordion","map","AccordionPanel","weight","render","remote","apiKey","process","APIKEY","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","MEASUREMENTID","appId","APPID","measurementId","MESSAGINGSENDERID","firebase","initializeApp","db","database","ref","stage","email","push","catch","e","console","log","Chart","dataToRender","setDataToRender","active","setActive","stats","value","onHover","l","v","useEffect","Stack","anchor","Meter","type","values","thickness","round","Side","setValue","submit","setSubmit","isVisible","name","theme","deepMerge","grommet","formField","border","position","side","formFields","setFormFields","emailMask","regexp","placeholder","fixed","buyerSteps","onSubmit","nextFormElement","filter","f","Object","keys","length","api","saveForm","FormFieldType","RadioButtonGroup","options","MaskedInput","mask","horizontal","Form","nextValue","i","ThemeContext","Extend","FormField","Button","Footer","global","colors","brand","dark","font","family","breakpoints","small","medium","large","accordion","icons","collapse","FormSubtract","expand","FormAdd","item","rows","gridAreas","Responsive","areas","overrideColumns","overrideRows","props","columnsVal","rowsVal","areasVal","Array","isArray","Grid","undefined","App","setDarkMode","Grommet","full","themeMode","gridArea","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce4e4fb3.chunk.js","sourcesContent":["import {\n  CheckBox,\n  Anchor,\n  Box,\n  Header as Head,\n  Menu,\n  ResponsiveContext,\n} from \"grommet\";\nimport { Home, Apps } from \"grommet-icons\";\n\nconst Header = ({ darkMode, setMode }) => {\n  const onChange = (event) => setMode(event.target.checked);\n\n  const burgerMenuItems = [\n    {\n      label: <CheckBox\n      label=\"dark\"\n      checked={darkMode}\n      onChange={onChange}\n      toggle\n    />,\n    },\n    // {\n    //   label: <Box pad=\"small\">Feedback</Box>,\n    //   href: \"https://github.com/grommet/grommet/issues\",\n    // },\n  ];\n\n  return (\n    <Head background=\"brand\" pad=\"medium\" height=\"xsmall\">\n      <Anchor\n        margin={{ left: \"large\" }}\n        href=\"https://conveyanceme.uk/\"\n        icon={<Home />}\n        label=\"conveyance me\"\n        color=\"#1e1d23\"\n        size=\"xlarge\"\n      />\n      <ResponsiveContext.Consumer>\n        {(size) =>\n          size !== \"small\" ? (\n            <Box justify=\"end\">\n              <CheckBox\n                label=\"dark\"\n                checked={darkMode}\n                onChange={onChange}\n                toggle\n              />\n            </Box>\n          ) : (\n            <Menu\n              a11yTitle=\"Navigation Menu\"\n              dropProps={{ align: { top: \"bottom\", right: \"right\" } }}\n              icon={<Apps color=\"#1e1d23\"/>}\n              items={burgerMenuItems}\n              dropBackground=\"#1e1d23\"\n              size=\"medium\"\n            />\n          )\n        }\n      </ResponsiveContext.Consumer>\n    </Head>\n  );\n};\n\nexport default Header;\n","import { useState } from \"react\";\nimport {\n  Accordion,\n  AccordionPanel,\n  Anchor,\n  Box,\n  List,\n  Text,\n  DataTable,\n  Heading,\n  CheckBox,\n} from \"grommet\";\nimport { FormCheckmark as Home, FormAttachment as Copy } from \"grommet-icons\";\n\nconst conveyancerSellerData = [\n  {\n    fee: \"Anti-money laundering checks\",\n    cost: 13,\n  },\n  {\n    fee: \"Conveyancing\",\n    cost: 1000,\n  },\n  {\n    fee: \"Title deeds\",\n    cost: 6,\n  },\n  {\n    fee: \"Transferring of ownership\",\n    cost: 250,\n  },\n];\n\nconst conveyancerBuyerData = [\n  {\n    fee: \"Anti-money laundering checks\",\n    cost: 13,\n  },\n  {\n    fee: \"Bankruptcy search\",\n    cost: 4,\n  },\n  {\n    fee: \"Bank transfer fees\",\n    cost: 25,\n  },\n  {\n    fee: \"Conveyancing\",\n    cost: 1000,\n  },\n  {\n    fee: \"Gifted deposit\",\n    cost: 75,\n  },\n  {\n    fee: \"Help to Buy supplement\",\n    cost: 250,\n  },\n  {\n    fee: \"Lifetime/Help to Buy ISA\",\n    cost: 60,\n  },\n  {\n    fee: \"Local authority searches\",\n    cost: 350,\n  },\n  {\n    fee: \"Property fraud check\",\n    cost: 10,\n  },\n];\n\nconst conveyancerDataColumns = [\n  {\n    property: \"fee\",\n    header: <Text>Typical Fees</Text>,\n    footer: \"Total\",\n  },\n  {\n    property: \"cost\",\n    header: \"£\",\n    primary: true,\n    aggregate: \"sum\",\n    footer: { aggregate: true },\n  },\n];\n\nconst BUYER_PANELS = [\n  {\n    header: \"Conveyancer\",\n    body:\n      \"Choose a conveyancer when you're ready to make an offer and maybe get some Home Buyers’ Protection Insurance\",\n    table: conveyancerBuyerData,\n    link: {\n      label: \"Conveyancers' Regulator\",\n      url: \"https://www.clc-uk.org.uk/cms/cms.jsp?menu_id=19871\",\n    },\n  },\n  {\n    header: \"Offer\",\n    body:\n      \"Details are exchanged in the estate agent's Memorandum of Sale once the seller accepts your offer\",\n  },\n  {\n    header: \"Contract\",\n    body: \"Review seller's contract pack and make enquiries into:\",\n    list: [\n      \"Property Information Form TA6\",\n      \"Fittings and Contents Form TA10\",\n      \"Title documents\",\n      \"Leasehold Information Form\",\n      \"Certificates and guarantes\",\n    ],\n    link: {\n      label: \"TA documents\",\n      url: \"https://www.lawsociety.org.uk/topics/property/transaction-forms\",\n    },\n  },\n  {\n    header: \"Survey\",\n    body: \"You or your lender may want a home survey: \",\n    list: [\n      \"HomeBuyer Report - survey of damage or future repairs like damp or subsidence\",\n      \"Building Survey - detailed inspection of property condition\",\n    ],\n    link: {\n      label: \"Types of survey\",\n      url:\n        \"https://www.rics.org/uk/upholding-professional-standards/sector-standards/building-surveying/home-surveys/\",\n    },\n  },\n  {\n    header: \"Search\",\n    body: \"Conveyancer will carry out necessary searches: \",\n    list: [\n      \"Local Authority - controls on the building and surrounds\",\n      \"Environmental - polution and invasive species\",\n      \"Flood - drainage and any nearby water courses\",\n    ],\n    link: {\n      label: \"Local Authority search\",\n      url:\n        \"https://hoa.org.uk/advice/guides-for-homeowners/i-am-buying/local-authority-searches-explained/\",\n    },\n  },\n  {\n    header: \"Completion\",\n    body:\n      \"Conveyancers communicate to progress with contract exchange on your chosen date and send 10% deposit\",\n  },\n  {\n    header: \"Exchange\",\n    body: \"On the date agreed for completion:\",\n    list: [\n      \"Agree statement of accounts\",\n      \"Sign Transfer of Title TR1 and mortgage deeds\",\n      \"Conveyancer does final Land Registry search\",\n      \"Send contract pack and funds to seller's conveyancer\",\n    ],\n    link: {\n      label: \"Transfer ownership TR1\",\n      url:\n        \"https://www.gov.uk/government/publications/registered-titles-whole-transfer-tr1\",\n    },\n  },\n  {\n    header: \"Government\",\n    body:\n      \"Conveyancer send TR1 to Land Registry and pay any Stamp Duty to HMRC\",\n    link: {\n      label: \"Gov Stamp Duty calculator\",\n      url:\n        \"https://www.tax.service.gov.uk/calculate-stamp-duty-land-tax/#/intro\",\n    },\n  },\n];\n\nconst SELLER_PANELS = [\n  {\n    header: \"Conveyancer\",\n    body:\n      \"Choose a conveyancer when your property is marketed so you don't delay the sale\",\n    table: conveyancerSellerData,\n    link: {\n      label: \"Conveyancers' Regulator\",\n      url: \"https://www.clc-uk.org.uk/cms/cms.jsp?menu_id=19871\",\n    },\n  },\n  {\n    header: \"Offer\",\n    body:\n      \"Details are exchanged in the estate agent's Memorandum of Sale once you accept an offer\",\n  },\n  {\n    header: \"Contract\",\n    body:\n      \"Your conveyancer will put together a contract pack and may require information from you to complete:\",\n    list: [\n      \"Property Information Form TA6\",\n      \"Fittings and Contents Form TA10\",\n      \"Title documents\",\n      \"Leasehold Information Form\",\n      \"Certificates and guarantes\",\n    ],\n    link: {\n      label: \"TA documents\",\n      url: \"https://www.lawsociety.org.uk/topics/property/transaction-forms\",\n    },\n  },\n  {\n    header: \"Survey\",\n    body:\n      \"You can get a survey done when you market the property to speed up the sale\",\n  },\n  {\n    header: \"Completion\",\n    body:\n      \"Agree the completion date and your conveyancer will request 10% deposit from your buyer\",\n  },\n  {\n    header: \"Exchange\",\n    body: \"On the day\",\n    list: [\n      \"Sign the contract pack\",\n      \"Make sure the property is clean\",\n      \"Give all door keys to your conveyancer\",\n      \"Send contract pack and funds to seller's conveyancer\",\n    ],\n    link: {\n      label: \"Transfer ownership TR1\",\n      url:\n        \"https://www.gov.uk/government/publications/registered-titles-whole-transfer-tr1\",\n    },\n  },\n];\n\nconst Main = () => {\n  const [checked, setChecked] = useState(true);\n\n  const panelText = (panel) => (\n    <Box gap=\"medium\">\n      <Text>{panel.body}</Text>\n    </Box>\n  );\n\n  const panelList = (panel) => (\n    <List\n      data={panel.list}\n      children={(datum) => (\n        <Box direction=\"row\">\n          <Box pad={{ top: \"xxsmall\" }}>\n            <Home size=\"small\" />\n          </Box>\n          <Box pad={{ left: \"small\" }}>\n            <Text>{datum}</Text>\n          </Box>\n        </Box>\n      )}\n    />\n  );\n\n  const panelTable = (panel) => (\n    <Box align=\"center\" pad=\"medium\">\n      <DataTable\n        columns={conveyancerDataColumns}\n        data={panel.table}\n        resizeable\n      />\n    </Box>\n  );\n\n  const panelLink = (panel) => (\n    <Box pad={{ top: \"small\" }} direction=\"row\">\n      <Copy />\n      <Anchor\n        href={panel.link.url}\n        target=\"_blank\"\n        label={panel.link.label}\n        margin={{ left: \"xxsmall\" }}\n      />\n    </Box>\n  );\n\n  const render = (panel) => (\n    <AccordionPanel\n      key={panel.header}\n      label={\n        <Text\n          margin={{ left: \"xsmall\", vertical: \"small\" }}\n          size=\"large\"\n          weight={0}\n        >\n          {panel.header}\n        </Text>\n      }\n    >\n      <Box pad={{ left: \"xsmall\", bottom: \"medium\" }}>\n        {panelText(panel)}\n        {panel.list ? panelList(panel) : null}\n        {panel.table ? panelTable(panel) : null}\n        {panel.link ? panelLink(panel) : null}\n      </Box>\n    </AccordionPanel>\n  );\n\n  const panels = (data) => data.map((panel) => render(panel));;\n\n  const onChange = (event) => setChecked(event.target.checked);\n  return (\n    <Box pad={{vertical:\"xlarge\", left:\"xlarge\"}}>\n      <Heading margin={{ top: \"medium\" }} size=\"small\">\n        Your typical steps to {checked ? \"buy\" : \"a sale\"}\n      </Heading>\n      <Box pad={{ bottom: \"large\" }}>\n        <Text margin={{ left: \"xsmall\" }}>\n          Conveyancing is an arcane and long process to transfer ownership but\n          we can help your {checked ? \"purchase\" : \"sale\"}.\n        </Text>\n        <Box pad=\"medium\" align=\"end\">\n          <CheckBox\n            label={checked ? \"Buyer\" : \"Seller\"}\n            checked={checked}\n            onChange={onChange}\n            toggle\n          />\n        </Box>\n      </Box>\n      <Accordion margin={{ vertical: \"medium\" }}>\n        {panels(checked ? BUYER_PANELS : SELLER_PANELS)}\n      </Accordion>\n    </Box>\n  );\n};\n\nexport default Main;\n","/* eslint-disable import/no-anonymous-default-export */\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport \"firebase/analytics\";\n\nconst remote = {\n  apiKey: process.env.APIKEY,\n  authDomain: \"conveyanceme.firebaseapp.com\",\n  databaseURL: \"https://conveyanceme.firebaseio.com\",\n  projectId: \"conveyanceme\",\n  storageBucket: \"conveyanceme.appspot.com\",\n  messagingSenderId: process.env.MEASUREMENTID,\n  appId: process.env.APPID,\n  measurementId: process.env.MESSAGINGSENDERID,\n};\n\nfirebase.initializeApp(remote);\n\nexport default firebase.database();","import firebase from \"./firebase\";\n\nconst db = firebase.ref(\"/\");\n\nclass api {\n  saveForm(stage, email) {\n    return db.push({ stage, email }).catch((e) => console.log(e));\n  }\n}\n\nexport default new api();\n","import { useEffect, useState } from \"react\";\nimport { Box, Stack, Meter, Text } from \"grommet\";\n\nconst Chart = ({ data }) => {\n  const [dataToRender, setDataToRender] = useState(null);\n  const [active, setActive] = useState(null);\n\n  const stats = [\n    {\n      value: 46,\n      onHover: () => setActive({ l: \"change their minds\", v: 46 }),\n    },\n    {\n      value: 23,\n      onHover: () => setActive({ l: \"fail to renegotiate\", v: 23 }),\n    },\n    {\n      value: 12,\n      onHover: () => setActive({ l: \"lending shortfall\", v: 12 }),\n    },\n    {\n      value: 10,\n      onHover: () => setActive({ l: \"survey nightmare\", v: 10 }),\n    },\n    {\n      value: 8,\n      onHover: () => setActive({ l: \"collapsed chain\", v: 8 }),\n    },\n  ];\n\n  useEffect(() => {\n    switch (data) {\n      case \"stats\":\n        setDataToRender(stats);\n        break;\n      default:\n        break;\n    }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Box align=\"center\" pad=\"medium\">\n      <Stack anchor=\"center\">\n        <Meter\n          type=\"circle\"\n          values={dataToRender}\n          size=\"small\"\n          thickness=\"medium\"\n          round\n        />\n        <Box align=\"center\">\n          <Box direction=\"row\" align=\"center\" pad={{ bottom: \"xsmall\" }}>\n            <Text size=\"xxlarge\" weight=\"bold\">\n              {active ? active.v : 38}\n            </Text>\n            <Text>%</Text>\n          </Box>\n          <Text>{active ? active.l : \"sales fail\"}</Text>\n        </Box>\n      </Stack>\n    </Box>\n  );\n};\n\nexport default Chart;\n","import { useState } from \"react\";\nimport {\n  Heading,\n  Box,\n  Text,\n  Button,\n  Form,\n  FormField,\n  MaskedInput,\n  RadioButtonGroup,\n  ThemeContext,\n} from \"grommet\";\nimport { grommet } from 'grommet/themes'\nimport { deepMerge } from 'grommet/utils'\nimport api from \"./service\"\nimport Chart from \"./Chart\";\n\nconst Side = () => {\n  const [value, setValue] = useState({});\n  const [submit, setSubmit] = useState(false);\n  const [formFields, setFormFields] = useState([\n    {\n      isVisible: true,\n      name: \"stage\",\n      theme: deepMerge(grommet, {\n        formField: {\n          border: { position: \"none\" },\n        },\n      }),\n    },\n    {\n      isVisible: false,\n      name: \"email\",\n      theme: deepMerge(grommet, {\n        formField: {\n          border: { position: \"inner\", side: \"bottom\" },\n        },\n      }),\n    },\n  ]);\n\n  const emailMask = [\n    { regexp: /^[\\w\\-_.]+$/, placeholder: \"example\" },\n    { fixed: \"@\" },\n    { regexp: /^[\\w]+$/, placeholder: \"my\" },\n    { fixed: \".\" },\n    { regexp: /^[\\w]+$/, placeholder: \"com\" },\n  ];\n  const buyerSteps = [\n    \"searching\",\n    \"made an offer\",\n    \"conveyancing\",\n    \"exchanged\",\n  ];\n\n  const onSubmit = ({ value }) => {\n    const { stage, email } = value;\n    const nextFormElement = formFields.filter(\n      (f) => f.name !== Object.keys(value)[0]\n    );\n    if (formFields.length > 1) {\n      nextFormElement[0].isVisible = true;\n      return setFormFields(nextFormElement);\n    }\n    setSubmit(true);\n    return api.saveForm(stage, email);\n  };\n\n  const FormFieldType = (name) => {\n    switch (name) {\n      case \"stage\":\n        return <RadioButtonGroup name={name} options={buyerSteps} />;\n      case \"email\":\n        return <MaskedInput name={name} mask={emailMask} />;\n      default:\n        return null;\n    }\n  };\n\n  const form = () => (\n    <Form\n      value={value}\n      onChange={(nextValue) => setValue(nextValue)}\n      onSubmit={onSubmit}\n    >\n      {formFields.map((f, i) =>\n        f.isVisible ? (\n          <ThemeContext.Extend key={i} value={f.theme}>\n            <FormField name={f.name}>{FormFieldType(f.name)}</FormField>\n          </ThemeContext.Extend>\n        ) : null\n      )}\n      <Box direction=\"row\" justify=\"center\" margin={{ top: \"medium\" }}>\n        <Button type=\"submit\" label=\"Submit\" primary />\n      </Box>\n    </Form>\n  );\n\n  return (\n    <Box pad={{vertical:\"xlarge\", left:\"xlarge\"}}>\n      <Heading margin={{   vertical: \"medium\"   }} size=\"small\">\n        Don't leave selling your home to chance\n      </Heading>\n      <Chart data=\"stats\" />\n      <Text margin=\"small\">\n        Sale time contributes to many of the 4 in 10 sales that fail.\n      </Text>\n      <Box align=\"center\" pad={{ horizontal: \"small\", vertical: \"large\" }}>\n        <Text size=\"xlarge\">What stage are you at?</Text>\n        {!submit ? form() : <Chart data=\"stats\" />}\n      </Box>\n    </Box>\n  );\n};\nexport default Side","const Footer = () => <></>\n\nexport default Footer","import {useState} from 'react' \nimport { Grommet, Box, Grid, ResponsiveContext } from \"grommet\";\nimport { grommet } from 'grommet/themes'\nimport { FormSubtract, FormAdd } from 'grommet-icons'\nimport { deepMerge } from 'grommet/utils'\nimport Header from './Header'\nimport Main from './Main'\nimport Side from './Side'\nimport Footer from './Footer'\n\nconst theme = deepMerge(grommet, {\n  global: {\n    colors: {\n      brand: {\n        dark: \"#d6bbc2\",\n      },\n      \"accent-1\": \"#f4cccc\",\n      \"neutral-1\": \"#d8b6b8\",\n      \"neutral-2\": \"#d6ae98\",\n      \"neutral-3\": \"#dd9c66\",\n      \"neutral-4\": \"#d3803b\",\n      background: {\n        dark: \"#1e1d23\",\n      },\n    },\n    font: {\n      family: `-apple-system,\n       BlinkMacSystemFont, \n       \"Segoe UI\", \n       Roboto`,\n    },\n    breakpoints: {\n      small: {\n        value: 800,\n      },\n      medium: {\n        value: 1500,\n      },\n      large: {\n        value: 2800,\n      },\n    },\n  },\n  accordion: {\n    icons: {\n      collapse: FormSubtract,\n      expand: FormAdd,\n    },\n  },\n  list: { item: { border: null } },\n});\n\nconst columns = {\n  small: [\"auto\"],\n  medium: [\"2/3\", \"1/3\"],\n  large: [\"2/4\", \"1/4\", \"1/4\"],\n};\n\nconst rows = {\n  small: [\"xsmall\", \"auto\", \"auto\", \"xsmall\"],\n  medium: [\"xsmall\", \"auto\", \"xsmall\"],\n  large: [\"xsmall\", \"auto\", \"xsmall\"],\n};\n\nconst gridAreas = {\n  small: [[\"header\"], [\"main\"], [\"side\"], [\"footer\"]],\n  medium: [\n    [\"header\", \"header\"],\n    [\"main\", \"side\"],\n    [\"footer\", \"footer\"],\n  ],\n  large: [\n    [\"header\", \"header\"],\n    [\"main\", \"side\"],\n    [\"footer\", \"footer\"],\n  ],\n};\n\nconst Responsive = ({\n  children,\n  overrideColumns,\n  overrideRows,\n  areas,\n  ...props\n}) => (\n  <ResponsiveContext.Consumer>\n    {size => {\n      // Take into consideration if not array is sent but a simple string\n      let columnsVal = columns;\n      if (columns) {\n        if (columns[size]) {\n          columnsVal = columns[size];\n        }\n      }\n\n      let rowsVal = rows;\n      if (rows) {\n        if (rows[size]) {\n          rowsVal = rows[size];\n        }\n      }\n\n      // Also if areas is a simple array not an object of arrays for\n      // different sizes\n      let areasVal = areas;\n      if (areas && !Array.isArray(areas)) areasVal = areas[size];\n\n      return (\n        <Grid\n          {...props}\n          areas={!areasVal ? undefined : areasVal}\n          rows={!rowsVal ? size : rowsVal}\n          columns={!columnsVal ? size : columnsVal}\n        >\n          {children}\n          </Grid>\n      );\n    }}\n  </ResponsiveContext.Consumer>\n);\n\nconst App = () => {\n  const [darkMode, setDarkMode] = useState(true);\n  return (\n    <Grommet full theme={theme} themeMode={darkMode ? \"dark\" : \"light\"}>\n      <Responsive rows={rows} columns={columns} gap=\"xsmall\" areas={gridAreas}>\n        <Box background=\"brand\" gridArea=\"header\">\n          <Header darkMode={darkMode} setMode={setDarkMode} />\n        </Box>\n\n        <Box gridArea=\"main\">\n          <Main />\n        </Box>\n\n        <Box gridArea=\"side\">\n          <Side />\n        </Box>\n\n        <Box gridArea=\"footer\">\n          <Footer />\n        </Box>\n      </Responsive>\n    </Grommet>\n  );\n};\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}